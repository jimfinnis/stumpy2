%%vertex

uniform mat4 matWorldViewProj;
uniform vec4 colDiffuse;

uniform vec4 uAmbient;
uniform vec2 uFogDist;

attribute vec4 aPosition;
attribute vec2 aTexCoords;

varying vec4 vCol;
varying vec2 vTexCoords;
varying float vFog;

void main()
{

    gl_Position = matWorldViewProj * aPosition;
    vec4 col;
    vCol = colDiffuse + uAmbient;    
    vTexCoords = aTexCoords;
    float eyedist = gl_Position.z;
    vFog = smoothstep(uFogDist[0],uFogDist[1],eyedist);
}

%%fragment

uniform sampler2D sTex;
uniform vec4 uFogCol;

varying vec4 vCol;
varying vec2 vTexCoords;
varying float vFog;

void main()
{
    vec4 baseCol = vec4(vCol.x,vCol.y,vCol.z,vCol.w);
    vec4 texCol = texture2D(sTex,vTexCoords);
    vec4 col = baseCol*texCol;
    gl_FragColor = mix(col,uFogCol,vFog);
}

